name: Build Rock APK

on:
  workflow_dispatch:

concurrency: 
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Generate project files
        run: |
          mkdir -p Rock/app/src/main/java/com/rock/browser
          mkdir -p Rock/app/src/main/res/{layout,values,values-ar,drawable,mipmap-anydpi-v26}

          cat > Rock/settings.gradle <<'EOF'
          rootProject.name = "Rock"
          include ':app'
          EOF

          cat > Rock/build.gradle <<'EOF'
          buildscript {
            ext { kotlin_version = '1.9.24' }
            repositories { google(); mavenCentral() }
            dependencies {
              classpath 'com.android.tools.build:gradle:8.5.0'
              classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
            }
          }
          allprojects { repositories { google(); mavenCentral() } }
          task clean(type: Delete) { delete rootProject.buildDir }
          EOF

          cat > Rock/gradle.properties <<'EOF'
          org.gradle.jvmargs=-Xmx2048m -Dfile.encoding=UTF-8
          android.useAndroidX=true
          android.nonTransitiveRClass=true
          android.enableJetifier=true
          EOF

          cat > Rock/app/build.gradle <<'EOF'
          plugins { id 'com.android.application'; id 'org.jetbrains.kotlin.android' }
          android {
            namespace 'com.rock.browser'
            compileSdk 34
            defaultConfig { applicationId "com.rock.browser"; minSdk 24; targetSdk 34; versionCode 1; versionName "1.0" }
            buildTypes {
              release { minifyEnabled false; proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro' }
              debug { debuggable true }
            }
            buildFeatures { viewBinding true }
            
            compileOptions {
              sourceCompatibility JavaVersion.VERSION_17
              targetCompatibility JavaVersion.VERSION_17
            }
            kotlinOptions {
              jvmTarget = '17'
            }
          }
          dependencies {
            implementation 'androidx.core:core-ktx:1.13.1'
            implementation 'androidx.appcompat:appcompat:1.7.0'
            implementation 'com.google.android.material:material:1.12.0'
            implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
          }
          EOF

          cat > Rock/app/proguard-rules.pro <<'EOF'
          EOF

          cat > Rock/app/src/main/AndroidManifest.xml <<'EOF'
          <manifest xmlns:android="http://schemas.android.com/apk/res/android">
            <application
              android:allowBackup="true"
              android:icon="@mipmap/ic_launcher"
              android:label="@string/app_name"
              android:roundIcon="@mipmap/ic_launcher_round"
              android:supportsRtl="true"
              android:theme="@style/Theme.Rock">
              <activity android:name=".SettingsActivity" android:exported="false"/>
              <activity android:name=".MainActivity" android:exported="true">
                <intent-filter>
                  <action android:name="android.intent.action.MAIN" />
                  <category android:name="android.intent.category.LAUNCHER" />
                </intent-filter>
              </activity>
            </application>
          </manifest>
          EOF

          cat > Rock/app/src/main/res/values/themes.xml <<'EOF'
          <resources>
            <style name="Theme.Rock" parent="Theme.MaterialComponents.DayNight.NoActionBar">
              <item name="android:statusBarColor">@android:color/black</item>
              <item name="android:navigationBarColor">@android:color/black</item>
              <item name="colorPrimary">@color/rock_red</item>
              <item name="colorSecondary">@color/rock_gold</item>
            </style>
          </resources>
          EOF

          cat > Rock/app/src/main/res/values/colors.xml <<'EOF'
          <resources>
            <color name="rock_black">#000000</color>
            <color name="rock_gold">#D4AF37</color>
            <color name="rock_red">#D50000</color>
            <color name="rock_white">#FFFFFF</color>
          </resources>
          EOF

          cat > Rock/app/src/main/res/values/strings.xml <<'EOF'
          <resources>
            <string name="app_name">Rock</string>
            <string name="search_hint">Search or enter URL</string>
            <string name="go">Go</string>
            <string name="settings">Settings</string>
            <string name="settings_title">Settings</string>
            <string name="language">Language</string>
            <string name="english">English</string>
            <string name="arabic">Arabic</string>
            <string name="save">Save</string>
            <string name="invalid_url">Invalid URL</string>
            <string name="homepage">Search Engine</string>
            <string name="homepage_hint">e.g., https://google.com/search?q=</string>
          </resources>
          EOF

          cat > Rock/app/src/main/res/values-ar/strings.xml <<'EOF'
          <resources>
            <string name="app_name">Rock</string>
            <string name="search_hint">ابحث أو أدخل رابط</string>
            <string name="go">اذهب</string>
            <string name="settings">الإعدادات</string>
            <string name="settings_title">الإعدادات</string>
            <string name="language">اللغة</string>
            <string name="english">إنجليزي</string>
            <string name="arabic">عربي</string>
            <string name="save">حفظ</string>
            <string name="invalid_url">رابط غير صالح</string>
            <string name="homepage">محرك البحث</string>
            <string name="homepage_hint">مثال: https://google.com/search?q=</string>
          </resources>
          EOF

          cat > Rock/app/src/main/res/layout/activity_main.xml <<'EOF'
          <?xml version="1.0" encoding="utf-8"?>
          <androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
              xmlns:app="http://schemas.android.com/apk/res-auto"
              android:id="@+id/root_layout"
              android:layout_width="match_parent"
              android:layout_height="match_parent"
              android:background="@color/rock_black">

              <LinearLayout
                  android:id="@+id/searchBar"
                  android:layout_width="0dp"
                  android:layout_height="56dp"
                  android:layout_margin="12dp"
                  android:background="@drawable/gold_rounded"
                  android:gravity="center_vertical"
                  android:paddingStart="12dp"
                  android:paddingEnd="8dp"
                  app:layout_constraintTop_toTopOf="parent"
                  app:layout_constraintStart_toStartOf="parent"
                  app:layout_constraintEnd_toEndOf="parent">

                  <EditText
                      android:id="@+id/searchInput"
                      android:layout_width="0dp"
                      android:layout_height="wrap_content"
                      android:layout_weight="1"
                      android:hint="@string/search_hint"
                      android:textColor="@color/rock_black"
                      android:textColorHint="@color/rock_black"
                      android:inputType="textUri"
                      android:singleLine="true"
                      android:imeOptions="actionGo"
                      android:background="@android:color/transparent"
                      android:padding="8dp"/>

                  <Button
                      android:id="@+id/goBtn"
                      android:layout_width="wrap_content"
                      android:layout_height="wrap_content"
                      android:text="@string/go"/>
              </LinearLayout>

              <LinearLayout
                  android:id="@+id/bottomBar"
                  android:layout_width="0dp"
                  android:layout_height="56dp"
                  android:gravity="center"
                  android:background="@color/rock_black"
                  app:layout_constraintBottom_toBottomOf="parent"
                  app:layout_constraintStart_toStartOf="parent"
                  app:layout_constraintEnd_toEndOf="parent">

                  <Button android:id="@+id/settingsBtn" android:layout_width="wrap_content" android:layout_height="wrap_content" android:text="@string/settings"/>
              </LinearLayout>

          </androidx.constraintlayout.widget.ConstraintLayout>
          EOF

          cat > Rock/app/src/main/res/layout/activity_settings.xml <<'EOF'
          <?xml version="1.0" encoding="utf-8"?>
          <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
              android:layout_width="match_parent"
              android:layout_height="match_parent"
              android:orientation="vertical"
              android:padding="16dp"
              android:background="@color/rock_black">

              <TextView
                  android:layout_width="wrap_content"
                  android:layout_height="wrap_content"
                  android:text="@string/homepage"
                  android:textColor="@color/rock_white"
                  android:textSize="16sp"/>

              <EditText
                  android:id="@+id/homepageInput"
                  android:layout_width="match_parent"
                  android:layout_height="wrap_content"
                  android:layout_marginBottom="16dp"
                  android:hint="@string/homepage_hint"
                  android:textColor="@color/rock_white"
                  android:backgroundTint="@color/rock_gold"
                  android:textColorHint="@color/rock_white"/>

              <TextView
                  android:layout_width="wrap_content"
                  android:layout_height="wrap_content"
                  android:text="@string/language"
                  android:textColor="@color/rock_white"
                  android:textSize="16sp"/>

              <Spinner
                  android:id="@+id/langSpinner"
                  android:layout_width="match_parent"
                  android:layout_height="wrap_content"
                  android:layout_marginBottom="16dp"
                  android:backgroundTint="@color/rock_gold"/>

              <Button
                  android:id="@+id/saveBtn"
                  android:layout_width="wrap_content"
                  android:layout_height="wrap_content"
                  android:text="@string/save"/>
          </LinearLayout>
          EOF

          cat > Rock/app/src/main/res/drawable/gold_rounded.xml <<'EOF'
          <?xml version="1.0" encoding="utf-8"?>
          <shape xmlns:android="http://schemas.android.com/apk/res/android" android:shape="rectangle">
            <solid android:color="@color/rock_gold"/>
            <corners android:radius="16dp"/>
          </shape>
          EOF

          cat > Rock/app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml <<'EOF'
          <?xml version="1.0" encoding="utf-8"?>
          <adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
            <background android:drawable="@color/rock_red"/>
            <foreground android:drawable="@drawable/ic_w_foreground"/>
          </adaptive-icon>
          EOF

          cat > Rock/app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml <<'EOF'
          <?xml version="1.0" encoding="utf-8"?>
          <adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
            <background android:drawable="@color/rock_red"/>
            <foreground android:drawable="@drawable/ic_w_foreground"/>
          </adaptive-icon>
          EOF

          cat > Rock/app/src/main/res/drawable/ic_w_foreground.xml <<'EOF'
          <?xml version="1.0" encoding="utf-8"?>
          <vector xmlns:android="http://schemas.android.com/apk/res/android"
              android:width="108dp" android:height="108dp"
              android:viewportWidth="108" android:viewportHeight="108">
            <path android:fillColor="#00000000" android:strokeColor="#000000"
                  android:strokeWidth="14"
                  android:pathData="M18,20 L34,88 L54,40 L74,88 L90,20"/>
          </vector>
          EOF

          cat > Rock/app/src/main/java/com/rock/browser/MainActivity.kt <<'EOF'
          package com.rock.browser

          import android.content.Intent
          import android.net.Uri
          import android.os.Bundle
          import android.util.Patterns
          import android.view.inputmethod.EditorInfo
          import androidx.appcompat.app.AppCompatActivity
          import com.rock.browser.databinding.ActivityMainBinding
          import java.net.URLEncoder

          class MainActivity : AppCompatActivity() {
              private lateinit var binding: ActivityMainBinding

              override fun onCreate(savedInstanceState: Bundle?) {
                  super.onCreate(savedInstanceState)
                  binding = ActivityMainBinding.inflate(layoutInflater)
                  setContentView(binding.root)

                  binding.goBtn.setOnClickListener { openInExternalBrowser() }
                  binding.searchInput.setOnEditorActionListener { _, actionId, _ ->
                      if (actionId == EditorInfo.IME_ACTION_GO) {
                          openInExternalBrowser()
                          return@setOnEditorActionListener true
                      }
                      return@setOnEditorActionListener false
                  }

                  binding.settingsBtn.setOnClickListener { 
                      startActivity(Intent(this, SettingsActivity::class.java)) 
                  }
              }

              private fun openInExternalBrowser() {
                  val txt = binding.searchInput.text.toString().trim()
                  if (txt.isEmpty()) return

                  val urlString = if (Patterns.WEB_URL.matcher(txt).matches() || txt.startsWith("http")) {
                      if (txt.startsWith("http")) txt else "https://$txt"
                  } else {
                      val prefs = getSharedPreferences("rock_settings", MODE_PRIVATE)
                      val searchEngine = prefs.getString("homepage", "https://duckduckgo.com/?q=")
                      val query = URLEncoder.encode(txt, "UTF-8")
                      searchEngine + query
                  }
                  
                  try {
                      val intent = Intent(Intent.ACTION_VIEW, Uri.parse(urlString))
                      startActivity(intent)
                  } catch (e: Exception) {
                      // Optional: Show an error toast
                  }
              }
          }
          EOF

          cat > Rock/app/src/main/java/com/rock/browser/SettingsActivity.kt <<'EOF'
          package com.rock.browser

          import android.content.res.Configuration
          import android.os.Bundle
          import android.widget.ArrayAdapter
          import androidx.appcompat.app.AppCompatActivity
          import com.rock.browser.databinding.ActivitySettingsBinding
          import java.util.Locale

          class SettingsActivity : AppCompatActivity() {
              private lateinit var binding: ActivitySettingsBinding

              override fun onCreate(savedInstanceState: Bundle?) {
                  super.onCreate(savedInstanceState)
                  binding = ActivitySettingsBinding.inflate(layoutInflater)
                  setContentView(binding.root)
                  title = getString(R.string.settings_title)

                  val prefs = getSharedPreferences("rock_settings", MODE_PRIVATE)
                  val currentLang = prefs.getString("lang", "en")!!
                  val currentHomepage = prefs.getString("homepage", "https://duckduckgo.com/?q=")

                  binding.homepageInput.setText(currentHomepage)

                  val langAdapter = ArrayAdapter(this, android.R.layout.simple_spinner_dropdown_item,
                      listOf(getString(R.string.english) + " (en)", getString(R.string.arabic) + " (ar)"))
                  binding.langSpinner.adapter = langAdapter
                  binding.langSpinner.setSelection(if (currentLang == "en") 0 else 1)

                  binding.saveBtn.setOnClickListener {
                      val lang = if (binding.langSpinner.selectedItemPosition == 0) "en" else "ar"
                      val homepage = binding.homepageInput.text.toString().trim()
                      
                      prefs.edit()
                          .putString("lang", lang)
                          .putString("homepage", homepage)
                          .apply()

                      applyLanguage(lang)
                      finish()
                  }
              }

              private fun applyLanguage(lang: String) {
                  val locale = Locale(lang)
                  Locale.setDefault(locale)
                  val config = Configuration(resources.configuration)
                  config.setLocale(locale)
                  resources.updateConfiguration(config, resources.displayMetrics)
              }
          }
          EOF

      - name: Commit generated files
        run: |
          git config user.name "github-actions"
          git config user.email "actions@users.noreply.github.com"
          git add Rock
          git commit -m "Add Rock project (auto-generated)" || echo "No changes"
          git push

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: 'gradle'

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Install SDK packages
        run: |
          sdkmanager --install "platforms;android-34" "build-tools;34.0.0" "platform-tools"

      - name: Build Debug APK (no wrapper)
        uses: gradle/gradle-build-action@v3
        with:
          gradle-version: 8.7
          build-root-directory: Rock
          arguments: :app:assembleDebug

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: Rock-debug-apk
          path: Rock/app/build/outputs/apk/debug/*.apk
